@page "/"
@inject AppState appState
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManagerHome

@inject IJSRuntime JS

@inject IdentityRedirectManager RedirectManager

<PageTitle>Home</PageTitle>

<MudPaper Class="px-8 pt-2 pb-4 mx-4 my-4 rounded-xl" Justify="Justify.Center">
    <h1>Hello, world!</h1>

    Welcome to your new app.

    @foreach (var linha in arrayDeLinhas)
    {
        @linha
        <br />
    }

    <button class="btn btn-primary" @onclick="HandleSubmit">Click me 2</button>
</MudPaper>

@code
{
    string[] arrayDeLinhas;

    protected override async Task OnInitializedAsync()
    {
        arrayDeLinhas = appState.MyMessage.Split('\n');

        // var cookieContent = await localStorage.GetItemAsync<string>("cookietheme");

        // if (cookieContent == null)
        // {
        //     await JS.InvokeVoidAsync("toggleTheme");
        // }
        // else
        // {
        //     await JS.InvokeVoidAsync("toggleTheme", cookieContent);
        // }

    }

    private async Task HandleSubmit()
    {
        // await localStorage.SetItemAsync("cookietheme", "dark");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // var cookieContent = await localStorage.GetItemAsync<string>("cookietheme");

        // if (cookieContent == null)
        // {
        //     Console.WriteLine("Cookie is Theme");
        // }
        // else
        // {
        //     Console.WriteLine("We have a cookie with contents: " + cookieContent);
        // }

        // if (cookieContent == null)
        // {
        //     await JS.InvokeVoidAsync("toggleTheme");
        // }
        // else
        // {
        //     await JS.InvokeVoidAsync("toggleTheme", cookieContent);
        // }
    }
} 