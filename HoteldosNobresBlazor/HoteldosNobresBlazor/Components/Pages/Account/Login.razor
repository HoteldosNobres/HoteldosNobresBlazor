@page "/Account/Login"
@attribute [AllowAnonymous]

@using System.ComponentModel.DataAnnotations
@using HoteldosNobresBlazor.Classes
@using HoteldosNobresBlazor.Client.API
@using HoteldosNobresBlazor.Modelo
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider  

<PageTitle>Entre no sistema</PageTitle>

@* <h1>Log in</h1>
 *@
<div class="row">
    <div class="col-md-4">
        <section>
            <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                <DataAnnotationsValidator />
                <h2>Use seu CPF ou e-mail</h2>
                <hr />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label for="name" class="form-label">E-mail CPF Reserva</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label for="password" class="form-label">Senha</label>
                    <ValidationMessage For="() => Input.Password" class="text-danger" />
                </div>
                @* <div class="checkbox mb-3">
                <label class="form-label">
                <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input" />
                Remember me
                </label>
                </div> *@
                <button type="submit" class="w-100 btn btn-lg btn-primary">Entrar</button>
            </EditForm>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Bem vindo ao Hotel dos Nobres</h3>
            <hr />
            <ExternalLoginPicker />
        </section>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? userName { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task LoginUser()
    {
        AuthAPI authAPI = new AuthAPI();
        var resposta = await authAPI.LoginAsync(Input.Email, Input.Password);
        if (resposta.Sucesso)
        {
            var teste = (PersistingRevalidatingAuthenticationStateProvider)AuthenticationStateProvider;
            teste.AuthenticateUser(authAPI.GetAuthenticationStateAsync());

            HttpContext.User = resposta.User;
            await HttpContext.SignInAsync(resposta.User);
            // var authResult = await HttpContext.AuthenticateAsync();

            if (ReturnUrl is not null)
                Navigation.NavigateTo(ReturnUrl);
            else
                Navigation.NavigateTo(Navigation.BaseUri);

        }
    }

    private sealed class InputModel
    {
        [Required]
        [DataType(DataType.Text)]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }

    }
}