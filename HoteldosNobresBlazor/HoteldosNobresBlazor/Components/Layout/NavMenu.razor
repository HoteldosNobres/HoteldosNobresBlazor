@implements IDisposable
<link href="https://use.fontawesome.com/releases/v5.14.0/css/all.css" rel="stylesheet">

@inject NavigationManager NavigationManager

<MudNavMenu>
    <AuthorizeView Roles="admin">
        <Authorized>
            <MudNavGroup Title="Administrativo" Icon="@Icons.Material.Filled.Settings" Expanded="true">
                @* <MudNavLink Href="/" Match="NavLinkMatch.Prefix" Icon="fa-solid fa-house fa-lg"> Inicio</MudNavLink> *@
                <MudNavLink Href="fnrh" Match="NavLinkMatch.Prefix" Icon="fa-regular fa-file-code"> FNRH</MudNavLink>
                <MudNavLink Href="pagamentoairbnb" Match="NavLinkMatch.Prefix" Icon="fa-brands fa-airbnb fa-lg"> Pagamento Airbnb</MudNavLink>
                <MudNavLink Href="logwhatsapp" Match="NavLinkMatch.Prefix" Icon="fa-brands fa-whatsapp fa-lg">Log Whatsapp</MudNavLink>
                <MudNavLink Href="logreservas" Match="NavLinkMatch.Prefix" Icon="fa-solid fa-folder-plus fa-lg">Log Reservas</MudNavLink>
                <MudNavLink Href="reservas" Match="NavLinkMatch.Prefix" Icon="fa-solid fa-list fa-lg">Lista Reservas</MudNavLink>
            </MudNavGroup>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="client">
        <Authorized>
            <MudNavGroup Title="Suas Reservas" Icon="@Icons.Material.Filled.Bed" Expanded="true">
                <MudNavLink Href="minhareserva" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ListAlt">Lista</MudNavLink>
            </MudNavGroup> 
            <MudNavGroup Title="Seu Perfil" Icon="@Icons.Material.Filled.ManageAccounts" Expanded="true">
                <MudNavLink Href="/hospede/editar" Icon="@Icons.Material.Filled.Edit">Editar Informações</MudNavLink>
            </MudNavGroup>
        </Authorized>
    </AuthorizeView> 
</MudNavMenu>

@* https://demos.blazorbootstrap.com/icons#bootstrap-icons   *@

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}