@inject AuthenticationStateProvider authStateProvider
@inherits LayoutComponentBase

<AuthorizeView Roles="client">
    <Authorized>
        <MudAppBar Color="Color.Primary">
            <a href="" Style="color:white; margin-right: 50px">
                <MudImage Width="50" Height="50" Src="images/logo.png" Alt="Mony the dog" Style="margin-right: 10px" Class="rounded-lg"></MudImage> Hotel dos Nobres
            </a>
            <MudSpacer />
            <MudIconButton Icon="fa-solid fa-right-from-bracket" Color="Color.Inherit" Edge="Edge.End" Href="account/logout" />
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.End" OnClick="@ToggleDrawer" /> 
        </MudAppBar>
        <MudDrawer Class="mud-drawer-fixed" ClipMode="DrawerClipMode.Always" @bind-Open="@_isDrawerOpen" PreserveOpenState="true" Variant="@DrawerVariant.Responsive"> 
            <NavMenu />
        </MudDrawer>
    </Authorized>
    <NotAuthorized>
        <MudAppBar Color="Color.Primary">
            @*   <a href="" Style="color:white; margin-right: 50px"> *@
            <MudImage @onclick="HandleClick" Width="50" Height="50" Src="images/logo.png" Alt="Mony the dog" Style="margin-right: 10px" Class="rounded-lg"> </MudImage> Hotel dos Nobres
            @*    </a> *@
        </MudAppBar>
    </NotAuthorized>
</AuthorizeView>
@* <MudMainContent Class="mud-theme-background, mud-height-full"> *@
@*     @Body
</MudMainContent> *@

@code {

    [Parameter]
    public bool DarkMode { get; set; }

    private bool isAuthorized;
    private string? currentUrl;

    private bool _isDrawerOpen = true;
    private bool _shouldHandleDrawerToggled = false;
    private IJSObjectReference? _jsModule;

    void ToggleDrawer()
    {
        _isDrawerOpen = !_isDrawerOpen;
        //shouldHandleDrawerToggled = true;
    }

    void DrawerToggle()
    {
        DarkMode = !DarkMode;
    }

    public void HandleClick(MouseEventArgs e)
    {
        DarkMode = !DarkMode;
    }

}