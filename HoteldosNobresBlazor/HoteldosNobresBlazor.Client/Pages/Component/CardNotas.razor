@using System.Globalization 
@inject APICloudbeds cloudbedsAPI

<br />
<MudPaper Class="rounded-xl">
    <MudList T="string" ReadOnly="true" class="rounded-t-xl">
        <MudExpansionPanel Dense="true" Gutters="false" Style="background-color: #F5F4F4;" Expanded="true" class="rounded-xl">
            <TitleContent>
                <div class="d-flex">
                    @*  <MudIcon Icon="@Icons.Material.Filled.Info" class="mr-3"></MudIcon> *@
                    <MudText><strong>Notas</strong></MudText>
                </div>
            </TitleContent> 
            <ChildContent >
                <MudPaper class="rounded-b-xl">
                    <MudList T="string" ReadOnly="true"> 
                    @foreach (var item in Reserva.Notas!)
                    {
                        <MudListItem T="string">
                            <MudGrid Justify="Justify.SpaceBetween">
                                <MudItem xs="12" sm="3"> 
                                </MudItem>
                                <MudItem xs="9" sm="6">
                                    <MudText Typo="Typo.caption">@item.Texto</MudText>
                                </MudItem>
                                <MudItem xs="3" sm="3">
                                    <MudText Typo="Typo.caption"> @item.Id </MudText>
                                </MudItem>
                            </MudGrid>
                        </MudListItem>
                    } 
                    </MudList>
                </MudPaper>
            </ChildContent>
        </MudExpansionPanel>
    </MudList>
</MudPaper>
<br />



@code {
    [Parameter]
    public Reserva? Reserva { get; set; }
     

    protected override async Task OnInitializedAsync()
    {
        Reserva = await cloudbedsAPI.GetReservaAsync(Reserva.IDReserva!); 
    }

    
}
