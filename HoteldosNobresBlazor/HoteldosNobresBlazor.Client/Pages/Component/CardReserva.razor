@* <MudCard>
    @* <MudCardMedia Image=@Imagem></MudCardMedia> 
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@Reserva!.NomeHospede</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.body2">@LimitaCaracteres(Reserva!.Obs, 150)</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Color="Color.Warning"
                   Variant="Variant.Outlined"
                   Href=@($"/EditarArtista/{Reserva!.NomeHospede}")>Detalhes</MudButton>
    </MudCardActions>
</MudCard> *@


<MudCard> 
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6"> Numero @Reserva!.IDReserva </MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.body2">teste</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Color="Color.Warning"
                   Variant="Variant.Outlined"
                   Href=@($"/minhareserva/{Reserva!.IDReserva}")>Detalhes</MudButton>

    </MudCardActions>
</MudCard>



@code {
    [Parameter]
    public Reserva? Reserva { get; set; }

    public string? Imagem { get; set; }

    protected override void OnInitialized()
    {
        // Imagem = Reserva!.FotoPerfil!.Contains("Foto") ? $"https://localhost:7089/{Artista!.FotoPerfil}" : "images/cardArtista.png";

    }

    private string LimitaCaracteres(string texto, int tamanhoMaximo)
    {
        tamanhoMaximo -= 3;
        return (texto.Length >= tamanhoMaximo) ? $"{texto.Substring(0, tamanhoMaximo)}..." : texto;
    }
}
