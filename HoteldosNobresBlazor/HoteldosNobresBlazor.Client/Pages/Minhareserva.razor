@page "/minhareserva"
@using System.Security.Claims
@using System.Net.NetworkInformation
@using HoteldosNobresBlazor.Client.Pages.Component
@inject APICloudbeds cloudbedsAPI
@inject AuthenticationStateProvider authenticationStateProvider
@inject AppState appState


@rendermode InteractiveServer
 
<PageTitle>Reserva</PageTitle>
 
<MudStack  Row="true" Justify="Justify.SpaceBetween">
    <MudText Typo="Typo.h4"> Reservas</MudText>
    <MudPagination Count="@totalPaginas" SelectedChanged="PaginaMudou"></MudPagination>
</MudStack>

@if (listaPagina is not null)
{
    <MudGrid>
        @foreach (var reser in listaPagina)
        {
            <MudItem  >
                <CardReserva Reserva=reser/>
            </MudItem>
        }
    </MudGrid>
}
else
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}



@code {

    private int tamanho = 8;
    private int totalItens;
    private int totalPaginas;

    private UserInfo user = default!;
    private List<Reserva>? listaCompleta = Enumerable.Empty<Reserva>().ToList();
    private List<Reserva>? listaPagina;

    protected override async Task OnInitializedAsync()
    {
        if (authenticationStateProvider != null)
        {
            var retorno = await authenticationStateProvider.GetAuthenticationStateAsync();

            user = new UserInfo(retorno.User);
        }

        List<Reserva>? listacompleta = await cloudbedsAPI.getReservationsAsyncGuestDetails();


        listaCompleta = listacompleta.Where(a => a.Email == user.Email).ToList();
        if (listaCompleta is not null)
        {
            listaCompleta = listaCompleta.OrderByDescending(a => a.NomeHospede).ToList();
            totalItens = listaCompleta.Count();
            totalPaginas = Convert.ToInt32(Math.Ceiling((totalItens * 1.0) / tamanho));
            this.PaginaMudou(1);
        }
    }

    private void PaginaMudou(int pageNumber)
    {
        var indice = pageNumber - 1;
        listaPagina = listaCompleta!
            .Skip(tamanho * indice)
            .Take(tamanho)
            .ToList();
    }



}
